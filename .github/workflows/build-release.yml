name: Build Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyQt6>=6.9.1
          pip install pyinstaller>=6.15.0
          pip install -e .

      - name: Build with PyInstaller
        run: |
          echo "Checking PyQt6 installation..."
          python -c "import PyQt6; print('PyQt6 version:', PyQt6.QtCore.PYQT_VERSION_STR)"
          echo "Building with PyInstaller..."
          pyinstaller main.spec

      - name: Rename Windows executable
        run: |
          cd dist
          mv main.exe scheduler-windows-${{ github.ref_name }}.exe

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: scheduler-windows-${{ github.ref_name }}
          path: dist/scheduler-windows-${{ github.ref_name }}.exe
          retention-days: 30

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyQt6>=6.9.1
          pip install pyinstaller>=6.15.0
          pip install -e .

      - name: Build with PyInstaller
        run: |
          echo "Checking PyQt6 installation..."
          python -c "import PyQt6; print('PyQt6 version:', PyQt6.QtCore.PYQT_VERSION_STR)"
          echo "Building with PyInstaller..."
          pyinstaller main.spec

      - name: Create macOS archive
        run: |
          cd dist
          zip -r scheduler-macos-${{ github.ref_name }}.zip main.app/

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: scheduler-macos-${{ github.ref_name }}
          path: dist/scheduler-macos-${{ github.ref_name }}.zip
          retention-days: 30

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: scheduler-windows-${{ github.ref_name }}
          path: ./windows-build

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: scheduler-macos-${{ github.ref_name }}
          path: ./macos-build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Scheduler ${{ github.ref_name }}
            
            ### Downloads
            - **Windows**: `scheduler-windows-${{ github.ref_name }}.exe`
            - **macOS**: `scheduler-macos-${{ github.ref_name }}.zip`
            
            ### Installation
            - **Windows**: Download the `.exe` file and run it
            - **macOS**: Download the `.zip` file, extract it, and run the `.app` file
          files: |
            ./windows-build/scheduler-windows-${{ github.ref_name }}.exe
            ./macos-build/scheduler-macos-${{ github.ref_name }}.zip
          draft: false
          prerelease: false
