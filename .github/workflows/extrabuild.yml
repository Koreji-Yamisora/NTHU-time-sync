name: Build & Release Scheduler

on:
  push:
    tags:
      - 'v*'    # Trigger on tags like v1.0.0
  workflow_dispatch:  # Manual trigger

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            exe_name: scheduler-windows.exe
            add_data: "schedule_data.json;."
          - os: macos-latest
            exe_name: scheduler-macos
            add_data: "schedule_data.json:."

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build EXE
        run: |
          pyinstaller --onefile --windowed \
                      --add-data "${{ matrix.add_data }}" main.py

      - name: Create GitHub Release (only once)
        if: matrix.os == 'windows-latest'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.os == 'windows-latest' && 'dist/main.exe' || 'dist/main' }}
          asset_name: ${{ matrix.exe_name }}
          asset_content_type: application/octet-stream
